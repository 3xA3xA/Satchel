{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/Product`;\n    this.productRecords = [];\n  }\n  getProductById(id) {\n    return this.http.get(`${this.apiUrl}/GetProductById/${id}`);\n  }\n  getAllProducts(productType) {\n    return this.http.get(`${this.apiUrl}/GetAllProducts/${productType}`);\n  }\n  addNewProduct(productDto) {\n    const object = {\n      productDto: productDto,\n      addProductImagesDto: []\n    };\n    console.log(productDto);\n    return this.http.post(`${this.apiUrl}/AddProduct`, object);\n  }\n  getSellerProducts(userId) {\n    return this.http.get(`${this.apiUrl}/GetSellerProducts?userId=${userId}`);\n  }\n  deleteSellerProduct(productId) {\n    return this.http.delete(`${this.apiUrl}/`);\n  }\n  getFilteredProducts(filters, productType) {\n    const filteredParams = Object.fromEntries(Object.entries(filters).filter(([key, value]) => value != null));\n    return this.http.get(`${this.apiUrl}/Product/GetAllProducts/${productType}/`, {\n      params: filteredParams\n    });\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","ProductService","constructor","http","apiUrl","productRecords","getProductById","id","get","getAllProducts","productType","addNewProduct","productDto","object","addProductImagesDto","console","log","post","getSellerProducts","userId","deleteSellerProduct","productId","delete","getFilteredProducts","filters","filteredParams","Object","fromEntries","entries","filter","key","value","params","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Satchel\\SatchelApp\\src\\app\\core\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable} from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Product } from 'src/app/shared/components/routers/catalog/catalog.component';\r\nimport { ProductDto } from './config.service';\r\n\r\n// не могу его вынести\r\nexport interface Filters{\r\n  filterByMinPrice?: number, \r\n  filterByMaxPrice?: number, \r\n  filterByGender?: number, \r\n  filterByName?: string, \r\n  isFilterByDecreasePrice?: boolean, \r\n  isFilterByIncreasePrice?: boolean\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private apiUrl: string = `${environment.apiUrl}/Product`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  productRecords : Product[] = []; \r\n\r\n  getProductById(id: number): Observable<Product> {\r\n    return this.http.get<Product>(`${this.apiUrl}/GetProductById/${id}`);\r\n  }\r\n\r\n  getAllProducts(productType : string): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${this.apiUrl}/GetAllProducts/${productType}`);\r\n  }\r\n\r\n  addNewProduct(productDto: ProductDto) {\r\n    const object = {\r\n      productDto: productDto,\r\n      addProductImagesDto: []\r\n    };\r\n\r\n    console.log(productDto)\r\n\r\n    return this.http.post(`${this.apiUrl}/AddProduct`, object);\r\n  }\r\n\r\n  getSellerProducts(userId: number): Observable<Product[]>{\r\n    return this.http.get<Product[]>(`${this.apiUrl}/GetSellerProducts?userId=${userId}`)\r\n  }\r\n  \r\n  deleteSellerProduct(productId: number) {\r\n    return this.http.delete(`${this.apiUrl}/`)\r\n  }\r\n\r\n  getFilteredProducts(filters: Filters, productType: string): Observable<Product[]>{\r\n\r\n    const filteredParams = Object.fromEntries(\r\n      Object.entries(filters)\r\n        .filter(([key, value]) => value != null) \r\n    );\r\n\r\n    return this.http.get<Product[]>(`${this.apiUrl}/Product/GetAllProducts/${productType}/`, {\r\n      params: filteredParams\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAiB1D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAW,GAAGJ,WAAW,CAACI,MAAM,UAAU;IAIxD,KAAAC,cAAc,GAAe,EAAE;EAFS;EAIxCC,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAU,GAAG,IAAI,CAACJ,MAAM,mBAAmBG,EAAE,EAAE,CAAC;EACtE;EAEAE,cAAcA,CAACC,WAAoB;IACjC,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAY,GAAG,IAAI,CAACJ,MAAM,mBAAmBM,WAAW,EAAE,CAAC;EACjF;EAEAC,aAAaA,CAACC,UAAsB;IAClC,MAAMC,MAAM,GAAG;MACbD,UAAU,EAAEA,UAAU;MACtBE,mBAAmB,EAAE;KACtB;IAEDC,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;IAEvB,OAAO,IAAI,CAACT,IAAI,CAACc,IAAI,CAAC,GAAG,IAAI,CAACb,MAAM,aAAa,EAAES,MAAM,CAAC;EAC5D;EAEAK,iBAAiBA,CAACC,MAAc;IAC9B,OAAO,IAAI,CAAChB,IAAI,CAACK,GAAG,CAAY,GAAG,IAAI,CAACJ,MAAM,6BAA6Be,MAAM,EAAE,CAAC;EACtF;EAEAC,mBAAmBA,CAACC,SAAiB;IACnC,OAAO,IAAI,CAAClB,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI,CAAClB,MAAM,GAAG,CAAC;EAC5C;EAEAmB,mBAAmBA,CAACC,OAAgB,EAAEd,WAAmB;IAEvD,MAAMe,cAAc,GAAGC,MAAM,CAACC,WAAW,CACvCD,MAAM,CAACE,OAAO,CAACJ,OAAO,CAAC,CACpBK,MAAM,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAKA,KAAK,IAAI,IAAI,CAAC,CAC3C;IAED,OAAO,IAAI,CAAC5B,IAAI,CAACK,GAAG,CAAY,GAAG,IAAI,CAACJ,MAAM,2BAA2BM,WAAW,GAAG,EAAE;MACvFsB,MAAM,EAAEP;KACT,CAAC;EACJ;EAAC,QAAAQ,CAAA,G;qBA5CUhC,cAAc,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdrC,cAAc;IAAAsC,OAAA,EAAdtC,cAAc,CAAAuC,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}