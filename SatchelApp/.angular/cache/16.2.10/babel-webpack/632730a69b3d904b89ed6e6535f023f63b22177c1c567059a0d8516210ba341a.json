{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7082/api'; //URL API научиться правильно писать роуты для сервиса\n    this.imageAlt = '';\n    this.productRecords = [];\n  }\n  getProductById(id) {\n    return this.http.get(`${this.apiUrl}/Product/${id}`); //вставил /Product/ хз, мб уйня\n  }\n\n  getAllClothes(productType) {\n    return this.http.get(`${this.apiUrl}/${productType}`);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProductService","constructor","http","apiUrl","imageAlt","productRecords","getProductById","id","get","getAllClothes","productType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Satchel\\SatchelApp\\src\\app\\core\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport Product  from 'src/app/shared/components/routers/catalog/catalog.component';\r\nimport { Observable} from 'rxjs';\r\nimport {environment} from \"../../../environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private apiUrl = 'https://localhost:7082/api'; //URL API научиться правильно писать роуты для сервиса\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  imageAlt = '';\r\n\r\n  productRecords : Product[] = []; \r\n\r\n  getProductById(id: number): Observable<Product> {\r\n    return this.http.get<Product>(`${this.apiUrl}/Product/${id}`); //вставил /Product/ хз, мб уйня\r\n  }\r\n\r\n  getAllClothes(productType : string): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${this.apiUrl}/${productType}`);\r\n  }\r\n}\r\n"],"mappings":";;AASA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,4BAA4B,CAAC,CAAC;IAI/C,KAAAC,QAAQ,GAAG,EAAE;IAEb,KAAAC,cAAc,GAAe,EAAE;EAJS;EAMxCC,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAU,GAAG,IAAI,CAACL,MAAM,YAAYI,EAAE,EAAE,CAAC,CAAC,CAAC;EACjE;;EAEAE,aAAaA,CAACC,WAAoB;IAChC,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAY,GAAG,IAAI,CAACL,MAAM,IAAIO,WAAW,EAAE,CAAC;EAClE;EAAC,QAAAC,CAAA,G;qBAfUX,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdhB,cAAc;IAAAiB,OAAA,EAAdjB,cAAc,CAAAkB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}