{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UserService {\n  setAuthorizedStatus() {\n    this.isAuthorized = !this.isAuthorized;\n  }\n  get authorizedStatus() {\n    return this.isAuthorized;\n  }\n  constructor() {\n    this.isAuthorized = true;\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","setAuthorizedStatus","isAuthorized","authorizedStatus","constructor","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\volgatech\\bd\\Satchel\\SatchelApp\\src\\app\\core\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nexport interface IUser {\r\n  email: string;\r\n  password: string;\r\n  userType: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n\r\n  isAuthorized = true\r\n\r\n  setAuthorizedStatus(){\r\n    this.isAuthorized = !this.isAuthorized;\r\n  }\r\n\r\n  get authorizedStatus(){\r\n    return this.isAuthorized\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n"],"mappings":";AAYA,OAAM,MAAOA,WAAW;EAItBC,mBAAmBA,CAAA;IACjB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEA,IAAIC,gBAAgBA,CAAA;IAClB,OAAO,IAAI,CAACD,YAAY;EAC1B;EAEAE,YAAA;IAVA,KAAAF,YAAY,GAAG,IAAI;EAUH;EAAC,QAAAG,CAAA,G;qBAZNL,WAAW;EAAA;EAAA,QAAAM,EAAA,G;WAAXN,WAAW;IAAAO,OAAA,EAAXP,WAAW,CAAAQ,IAAA;IAAAC,UAAA,EAHV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}