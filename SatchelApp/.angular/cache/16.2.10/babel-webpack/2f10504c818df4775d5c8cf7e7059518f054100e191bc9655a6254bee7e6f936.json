{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}`;\n    this.imageAlt = '';\n    this.productRecords = [];\n    this.params = {\n      productType: '',\n      filterByMinPrice: 0,\n      filterByMaxPrice: 0,\n      filterByGender: 0,\n      filterByName: '',\n      isFilterByDecreasePrice: false,\n      isFilterByIncreasePrice: false\n    };\n  }\n  getProductById(id) {\n    return this.http.get(`${this.apiUrl}/Product/GetProductById/${id}`);\n  }\n  getAllProducts(productType) {\n    return this.http.get(`${this.apiUrl}/Product/GetAllProducts/${productType}`);\n  }\n  getFilteredProducts(filters) {\n    return this.http.get(`\n        ${this.apiUrl}/Product/GetAllProducts/\n        ${filters.productType}?filterByMinPrice=\n        ${filters.filterByMinPrice}&filterByMaxPrice=\n        ${filters.filterByMaxPrice}&filterByGender=\n        ${filters.filterByGender}&filterByName=\n        ${filters.filterByName}&isFilterByDecreasePrice=\n        ${filters.isFilterByDecreasePrice}&isFilterByIncreasePrice=\n        ${filters.isFilterByIncreasePrice}\n      `);\n  }\n  // &filterByName=balen&isFilterByDecreasePrice=true\n  formatNumber(num) {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  }\n  getFormattedPrice(price) {\n    return `${this.formatNumber(price)} ₽`;\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","ProductService","constructor","http","apiUrl","imageAlt","productRecords","params","productType","filterByMinPrice","filterByMaxPrice","filterByGender","filterByName","isFilterByDecreasePrice","isFilterByIncreasePrice","getProductById","id","get","getAllProducts","getFilteredProducts","filters","formatNumber","num","toString","replace","getFormattedPrice","price","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Повелитель\\Documents\\GitHub\\Satchel\\SatchelApp\\src\\app\\core\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Product } from 'src/app/shared/components/routers/catalog/catalog.component';\r\nimport { Observable} from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Filters } from 'src/app/shared/components/routers/catalog/catalog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private apiUrl: string = `${environment.apiUrl}`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  imageAlt = '';\r\n\r\n  productRecords : Product[] = []; \r\n\r\n  params = {\r\n    productType: '', \r\n    filterByMinPrice: 0, \r\n    filterByMaxPrice: 0, \r\n    filterByGender: 0, \r\n    filterByName: '', \r\n    isFilterByDecreasePrice: false, \r\n    isFilterByIncreasePrice: false\r\n  }\r\n\r\n  getProductById(id: number): Observable<Product> {\r\n    return this.http.get<Product>(`${this.apiUrl}/Product/GetProductById/${id}`);\r\n  }\r\n\r\n  getAllProducts(productType : string): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${this.apiUrl}/Product/GetAllProducts/${productType}`);\r\n  }\r\n\r\n  getFilteredProducts(filters: Filters): Observable<Product[]>{\r\n    return this.http.get<Product[]>(\r\n      `\r\n        ${this.apiUrl}/Product/GetAllProducts/\r\n        ${filters.productType}?filterByMinPrice=\r\n        ${filters.filterByMinPrice}&filterByMaxPrice=\r\n        ${filters.filterByMaxPrice}&filterByGender=\r\n        ${filters.filterByGender}&filterByName=\r\n        ${filters.filterByName}&isFilterByDecreasePrice=\r\n        ${filters.isFilterByDecreasePrice}&isFilterByIncreasePrice=\r\n        ${filters.isFilterByIncreasePrice}\r\n      `\r\n    );\r\n  }\r\n\r\n  // &filterByName=balen&isFilterByDecreasePrice=true\r\n\r\n  formatNumber(num: number) {\r\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n  }\r\n\r\n  getFormattedPrice(price: number) {\r\n    return `${this.formatNumber(price)} ₽`; \r\n  }\r\n}\r\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAW,GAAGJ,WAAW,CAACI,MAAM,EAAE;IAIhD,KAAAC,QAAQ,GAAG,EAAE;IAEb,KAAAC,cAAc,GAAe,EAAE;IAE/B,KAAAC,MAAM,GAAG;MACPC,WAAW,EAAE,EAAE;MACfC,gBAAgB,EAAE,CAAC;MACnBC,gBAAgB,EAAE,CAAC;MACnBC,cAAc,EAAE,CAAC;MACjBC,YAAY,EAAE,EAAE;MAChBC,uBAAuB,EAAE,KAAK;MAC9BC,uBAAuB,EAAE;KAC1B;EAduC;EAgBxCC,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAU,GAAG,IAAI,CAACb,MAAM,2BAA2BY,EAAE,EAAE,CAAC;EAC9E;EAEAE,cAAcA,CAACV,WAAoB;IACjC,OAAO,IAAI,CAACL,IAAI,CAACc,GAAG,CAAY,GAAG,IAAI,CAACb,MAAM,2BAA2BI,WAAW,EAAE,CAAC;EACzF;EAEAW,mBAAmBA,CAACC,OAAgB;IAClC,OAAO,IAAI,CAACjB,IAAI,CAACc,GAAG,CAClB;UACI,IAAI,CAACb,MAAM;UACXgB,OAAO,CAACZ,WAAW;UACnBY,OAAO,CAACX,gBAAgB;UACxBW,OAAO,CAACV,gBAAgB;UACxBU,OAAO,CAACT,cAAc;UACtBS,OAAO,CAACR,YAAY;UACpBQ,OAAO,CAACP,uBAAuB;UAC/BO,OAAO,CAACN,uBAAuB;OAClC,CACF;EACH;EAEA;EAEAO,YAAYA,CAACC,GAAW;IACtB,OAAOA,GAAG,CAACC,QAAQ,EAAE,CAACC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;EAC7D;EAEAC,iBAAiBA,CAACC,KAAa;IAC7B,OAAO,GAAG,IAAI,CAACL,YAAY,CAACK,KAAK,CAAC,IAAI;EACxC;EAAC,QAAAC,CAAA,G;qBAlDU1B,cAAc,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd/B,cAAc;IAAAgC,OAAA,EAAdhC,cAAc,CAAAiC,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}