{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { ElementRef, ViewChild } from '@angular/core';\nexport let CreateWindowComponent = class CreateWindowComponent {\n  constructor(createService, configeService, productService, userService) {\n    this.createService = createService;\n    this.configeService = configeService;\n    this.productService = productService;\n    this.userService = userService;\n    // массивы нужны для хранения списка фотографий продукта, брендов и типов продукта.\n    this.productTypes = [];\n    this.brandTypes = [];\n    this.sizeByProductTypes = [];\n    this.statusMsg = '';\n    this.newProduct = {\n      name: '',\n      description: '',\n      productTypeId: 0,\n      price: 0,\n      brandTypeId: 0,\n      genderTypeId: 0,\n      userId: this.userService.userId,\n      sizeTypeIds: [],\n      images: [this.configeService.PATHS.defaultProductImage]\n    };\n    this.fileInput = new ElementRef(null);\n  }\n  ngOnInit() {\n    this.getBrandTypes();\n    this.getProductTypes();\n    this.GetSizes();\n  }\n  onFileSelected(event) {\n    if (event.target.files && event.target.files.length) {\n      this.newProduct.images = []; //обнулил предыдущие загруженные фотографии\n      for (let i = 0; i < event.target.files.length; i++) {\n        const file = event.target.files[i];\n        let reader = new FileReader();\n        reader.onload = event => {\n          this.newProduct.images.push(event.target.result);\n        };\n        console.log(this.newProduct.images);\n        reader.readAsDataURL(file);\n      }\n    }\n  }\n  onBgClick(event) {\n    if (!event.target.classList.contains('create-form')) {\n      this.createService.setCreateWindowStatus();\n    }\n  }\n  addNewProduct() {\n    this.productService.addNewProduct(this.newProduct).subscribe(data => {\n      this.statusMsg = 'Товар поступил в продажу';\n      setTimeout(() => {\n        this.statusMsg = '';\n        this.createService.setCreateWindowStatus();\n      }, 2000);\n    }, error => {\n      this.statusMsg = 'Что-то пошло не так!';\n      setTimeout(() => {\n        this.statusMsg = '';\n      }, 2000);\n    });\n  }\n  getBrandTypes() {\n    this.createService.getBrandTypes().subscribe(data => {\n      this.brandTypes = data;\n    }, error => {\n      this.statusMsg = 'Что-то пошло не так!';\n    });\n  }\n  getProductTypes() {\n    this.createService.getProductTypes().subscribe(data => {\n      this.productTypes = data;\n    }, error => {\n      this.statusMsg = 'Что-то пошло не так!';\n    });\n  }\n  GetSizes(productTypeName) {\n    this.createService.getSizesByProductType(productTypeName).subscribe(data => {\n      this.sizeByProductTypes = data;\n    }, error => {\n      this.statusMsg = 'Что-то пошло не так!';\n    });\n  }\n};\n__decorate([Input()], CreateWindowComponent.prototype, \"newProduct\", void 0);\n__decorate([ViewChild('fileInput')], CreateWindowComponent.prototype, \"fileInput\", void 0);\nCreateWindowComponent = __decorate([Component({\n  selector: 'app-create-window',\n  templateUrl: './create-window.component.html',\n  styleUrls: ['./create-window.component.css']\n})], CreateWindowComponent);","map":{"version":3,"names":["Component","Input","ElementRef","ViewChild","CreateWindowComponent","constructor","createService","configeService","productService","userService","productTypes","brandTypes","sizeByProductTypes","statusMsg","newProduct","name","description","productTypeId","price","brandTypeId","genderTypeId","userId","sizeTypeIds","images","PATHS","defaultProductImage","fileInput","ngOnInit","getBrandTypes","getProductTypes","GetSizes","onFileSelected","event","target","files","length","i","file","reader","FileReader","onload","push","result","console","log","readAsDataURL","onBgClick","classList","contains","setCreateWindowStatus","addNewProduct","subscribe","data","setTimeout","error","productTypeName","getSizesByProductType","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Satchel\\SatchelApp\\src\\app\\shared\\components\\create-window\\create-window.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { CreateService} from 'src/app/core/services/create.service';\r\nimport { ElementRef, ViewChild } from '@angular/core';\r\nimport { ProductType, Brand, ConfigService, ProductDto, SizeType } from 'src/app/core/services/config.service';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { UserService } from 'src/app/core/services/user.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-window',\r\n  templateUrl: './create-window.component.html',\r\n  styleUrls: ['./create-window.component.css']\r\n})\r\n\r\nexport class CreateWindowComponent {\r\n\r\n  // массивы нужны для хранения списка фотографий продукта, брендов и типов продукта.\r\n  productTypes : ProductType[] = [];\r\n  brandTypes : Brand[] = [];\r\n  sizeByProductTypes : SizeType[] = [];\r\n  statusMsg = ''\r\n\r\n  @Input() newProduct: ProductDto = {  \r\n    name: '',\r\n    description: '',\r\n    productTypeId: 0,\r\n    price: 0,\r\n    brandTypeId: 0,\r\n    genderTypeId: 0,\r\n    userId: this.userService.userId,\r\n    sizeTypeIds: [],\r\n    images: [this.configeService.PATHS.defaultProductImage]\r\n  }\r\n\r\n  constructor(private createService: CreateService,\r\n              private configeService: ConfigService,\r\n              private productService: ProductService,\r\n              private userService: UserService) { }\r\n\r\n  @ViewChild('fileInput') fileInput = new ElementRef(null) ;\r\n\r\n  ngOnInit() {\r\n    this.getBrandTypes();\r\n    this.getProductTypes();   \r\n    this.GetSizes();\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    if (event.target.files && event.target.files.length) {\r\n      this.newProduct.images = [] //обнулил предыдущие загруженные фотографии\r\n      for (let i = 0; i < event.target.files.length; i++) {\r\n        const file = event.target.files[i];\r\n        let reader = new FileReader();\r\n    \r\n        reader.onload = (event: any) => {\r\n          this.newProduct.images.push(event.target.result);\r\n        }\r\n        console.log(this.newProduct.images)\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n  }\r\n\r\n  onBgClick(event: any) {\r\n    if (!event.target.classList.contains('create-form')) { \r\n      this.createService.setCreateWindowStatus()\r\n    } \r\n  }\r\n\r\n  addNewProduct() : void {\r\n    this.productService.addNewProduct(this.newProduct).subscribe\r\n      (data => {       \r\n        this.statusMsg = 'Товар поступил в продажу';\r\n\r\n        setTimeout(() => {\r\n          this.statusMsg = ''\r\n          this.createService.setCreateWindowStatus();\r\n        }, 2000)\r\n\r\n        \r\n      }, error => {\r\n        this.statusMsg = 'Что-то пошло не так!';\r\n\r\n        setTimeout(() => {\r\n          this.statusMsg = ''\r\n        }, 2000)\r\n      });\r\n    }\r\n\r\n  getBrandTypes() {\r\n    this.createService.getBrandTypes().subscribe(\r\n      (data: any) => {\r\n        this.brandTypes = data;\r\n      },\r\n      (error) => {\r\n        this.statusMsg = 'Что-то пошло не так!';\r\n      }\r\n    );\r\n  }\r\n\r\n  getProductTypes() {\r\n    this.createService.getProductTypes().subscribe(\r\n      (data: any) => {\r\n        this.productTypes = data;\r\n      },\r\n      (error) => {\r\n        this.statusMsg = 'Что-то пошло не так!';\r\n      }\r\n    );\r\n  }\r\n\r\n  GetSizes(productTypeName: string) {\r\n    this.createService.getSizesByProductType(productTypeName).subscribe(\r\n      (data: any) => {\r\n        this.sizeByProductTypes = data;\r\n      },\r\n      (error) => {\r\n        this.statusMsg = 'Что-то пошло не так!';\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}