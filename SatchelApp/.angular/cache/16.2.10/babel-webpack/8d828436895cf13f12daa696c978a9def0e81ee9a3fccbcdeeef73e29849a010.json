{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nexport let UserPageComponent = class UserPageComponent {\n  constructor(userService, productService, createService, router, configService, cartPageService) {\n    this.userService = userService;\n    this.productService = productService;\n    this.createService = createService;\n    this.router = router;\n    this.configService = configService;\n    this.cartPageService = cartPageService;\n    this.defaultUserPhoto = this.configService.PATHS.defaultUserPhoto;\n    this.userData = this.initializeUserData();\n    this.userInfoForm = this.initializeUserInfoForm(this.userData);\n    this.sellerProducts = [];\n    this.orders = [];\n    this.paymentTypes = [];\n    this.statusMsg = '';\n  }\n  ngOnInit() {\n    if (!this.userService.isAuthorized) this.router.navigate(['/']);\n    this.getUserData();\n    this.getSellerProducts();\n    this.getPaymentTypes();\n    this.getOrders();\n  }\n  get isCreateProductWindowOpen() {\n    return this.createService.isCreateOpen;\n  }\n  getFormattedPrice(price) {\n    return `${this.configService.getFormattedPrice(price)}`;\n  }\n  goToProduct(id) {\n    this.router.navigate(['catalog/product', id]);\n  }\n  getSellerProducts(simplifiedData = true) {\n    this.productService.getSellerProducts(this.userService.userId).subscribe(data => {\n      simplifiedData ? this.sellerProducts = data.slice(0, 3) : this.sellerProducts = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  updateUserInfo() {\n    this.userService.updateUserInfo(this.userData).subscribe(data => {\n      this.statusMsg = 'Данные обновлены';\n    }, error => {\n      this.statusMsg = 'Что-то пошло не так!';\n    });\n    setTimeout(() => {\n      this.statusMsg = '';\n    }, 2000);\n  }\n  openCreateWindow() {\n    this.createService.setCreateWindowStatus();\n  }\n  exitFromAccount() {\n    this.userService.exitFromAccount();\n    localStorage.clear();\n    this.router.navigate(['/']);\n  }\n  getUserData() {\n    this.userService.getUserData().subscribe(data => {\n      this.userData = data;\n      this.updateUserInfoForm();\n      if (this.userData.userPhotoSrc == null) this.userData.userPhotoSrc = this.defaultUserPhoto;\n    }, error => {\n      this.errorMsg();\n    });\n  }\n  getOrders() {\n    this.cartPageService.GetOrders(this.userService.userId).subscribe(data => {\n      this.orders = data;\n      this.updateUserInfoForm();\n    }, error => {\n      this.errorMsg();\n    });\n  }\n  getPaymentTypes() {\n    this.userService.getPaymentType().subscribe(data => {\n      this.paymentTypes = data;\n    }, error => {\n      this.errorMsg();\n    });\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        this.userData.userPhotoSrc = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  showMoreProducts() {\n    this.getSellerProducts(false);\n  }\n  deleteSellerProduct(productId) {\n    this.productService.deleteSellerProduct(productId).subscribe(data => {\n      this.getSellerProducts();\n    }, error => {\n      this.errorMsg();\n    });\n  }\n  updateUserInfoForm() {\n    this.userInfoForm.patchValue({\n      firstName: this.userData.firstName,\n      middleName: this.userData.middleName,\n      lastName: this.userData.lastName,\n      email: this.userData.email,\n      birth: this.userData.dateOfBirth,\n      userPhoto: this.userData.userPhotoSrc\n    });\n  }\n  initializeUserData() {\n    return {\n      firstName: '',\n      middleName: '',\n      lastName: '',\n      email: '',\n      dateOfBirth: new Date(1990, 0, 1),\n      userPhotoSrc: '',\n      userType: 'Покупатель'\n    };\n  }\n  initializeUserInfoForm(data) {\n    return new FormGroup({\n      firstName: new FormControl(data.firstName),\n      middleName: new FormControl(data.middleName),\n      lastName: new FormControl(data.lastName),\n      email: new FormControl(data.email),\n      birth: new FormControl(data.dateOfBirth),\n      userPhoto: new FormControl(data.userPhotoSrc)\n    });\n  }\n  errorMsg() {\n    this.statusMsg = 'Что-то пошло не так!';\n    setTimeout(() => {\n      this.statusMsg = '';\n    }, 2000);\n  }\n};\nUserPageComponent = __decorate([Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css']\n})], UserPageComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","UserPageComponent","constructor","userService","productService","createService","router","configService","cartPageService","defaultUserPhoto","PATHS","userData","initializeUserData","userInfoForm","initializeUserInfoForm","sellerProducts","orders","paymentTypes","statusMsg","ngOnInit","isAuthorized","navigate","getUserData","getSellerProducts","getPaymentTypes","getOrders","isCreateProductWindowOpen","isCreateOpen","getFormattedPrice","price","goToProduct","id","simplifiedData","userId","subscribe","data","slice","error","console","log","updateUserInfo","setTimeout","openCreateWindow","setCreateWindowStatus","exitFromAccount","localStorage","clear","updateUserInfoForm","userPhotoSrc","errorMsg","GetOrders","getPaymentType","onFileSelected","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","showMoreProducts","deleteSellerProduct","productId","patchValue","firstName","middleName","lastName","email","birth","dateOfBirth","userPhoto","Date","userType","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Satchel\\SatchelApp\\src\\app\\shared\\components\\routers\\user-page\\user-page.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { UserService, UserPageData } from 'src/app/core/services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { CreateService } from 'src/app/core/services/create.service';\r\nimport { ConfigService, PaymentType } from 'src/app/core/services/config.service';\r\nimport { Product } from '../catalog/catalog.component';\r\nimport { ProductService } from 'src/app/core/services/product.service';\r\nimport { CartPageService } from 'src/app/core/services/cart-page.service';\r\n\r\n@Component({\r\n  selector: 'app-user-page',\r\n  templateUrl: './user-page.component.html',\r\n  styleUrls: ['./user-page.component.css']\r\n})\r\nexport class UserPageComponent {\r\n  \r\n  constructor(private userService: UserService, \r\n              private productService: ProductService,\r\n              private createService: CreateService, \r\n              private router: Router,\r\n              private configService: ConfigService,\r\n              private cartPageService: CartPageService) { }\r\n\r\n  defaultUserPhoto: string = this.configService.PATHS.defaultUserPhoto;\r\n\r\n  userData: UserPageData = this.initializeUserData();\r\n  userInfoForm = this.initializeUserInfoForm(this.userData);\r\n  sellerProducts: Product[] = [];\r\n  orders: Product[] = [];\r\n  paymentTypes: PaymentType[] = [];\r\n  statusMsg = '';\r\n\r\n  ngOnInit() {\r\n    if (!this.userService.isAuthorized)\r\n      this.router.navigate(['/']);\r\n\r\n    this.getUserData();\r\n    this.getSellerProducts();\r\n    this.getPaymentTypes();\r\n    this.getOrders();\r\n  }\r\n\r\n  get isCreateProductWindowOpen(): boolean {\r\n    return this.createService.isCreateOpen;\r\n  }\r\n\r\n  getFormattedPrice(price: number) {\r\n    return `${this.configService.getFormattedPrice(price)}`; \r\n  }\r\n\r\n  goToProduct(id: number) {\r\n    this.router.navigate(['catalog/product', id]);\r\n  }\r\n\r\n  getSellerProducts(simplifiedData: boolean = true){\r\n    this.productService.getSellerProducts(this.userService.userId).subscribe(\r\n      (data: Product[]) => {\r\n        simplifiedData ? this.sellerProducts = data.slice(0, 3) :  this.sellerProducts = data;\r\n      },\r\n      (error) => {\r\n        console.log(error);   \r\n      }\r\n    )\r\n  }\r\n\r\n  updateUserInfo() {\r\n    this.userService.updateUserInfo(this.userData).subscribe(\r\n      (data: UserPageData) => {\r\n        this.statusMsg = 'Данные обновлены';\r\n      },\r\n      (error) => {\r\n        this.statusMsg = 'Что-то пошло не так!';\r\n      }\r\n    );\r\n    \r\n    setTimeout(() => {\r\n      this.statusMsg = ''\r\n    }, 2000)\r\n  }\r\n\r\n  openCreateWindow(){\r\n    this.createService.setCreateWindowStatus();\r\n  }\r\n\r\n  exitFromAccount(){\r\n    this.userService.exitFromAccount();\r\n    localStorage.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  getUserData() : void {\r\n    this.userService.getUserData().subscribe(\r\n      (data: UserPageData) => {\r\n        this.userData = data;\r\n        this.updateUserInfoForm();\r\n        if (this.userData.userPhotoSrc == null)\r\n          this.userData.userPhotoSrc = this.defaultUserPhoto;\r\n      },\r\n      (error) => {\r\n        this.errorMsg()\r\n      }\r\n    );\r\n  }\r\n\r\n  getOrders() {\r\n    this.cartPageService.GetOrders(this.userService.userId).subscribe(\r\n      (data: Product[]) => {\r\n        this.orders = data;\r\n        this.updateUserInfoForm();\r\n      },\r\n      (error) => {\r\n        this.errorMsg()\r\n      }\r\n    );\r\n  }\r\n\r\n  getPaymentTypes() {\r\n    this.userService.getPaymentType().subscribe(\r\n      (data: PaymentType[]) => {\r\n        this.paymentTypes = data;\r\n      },\r\n      (error) => {\r\n        this.errorMsg()\r\n      }\r\n    );\r\n  }\r\n\r\n  onFileSelected(event : any) {\r\n    const file:File = event.target.files[0];\r\n\r\n    if (file) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e: any) => {\r\n            this.userData.userPhotoSrc = e.target.result;\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  showMoreProducts() {\r\n    this.getSellerProducts(false)\r\n  }\r\n\r\n  deleteSellerProduct(productId: number) {\r\n    this.productService.deleteSellerProduct(productId).subscribe(\r\n      (data: any) => {\r\n        this.getSellerProducts();\r\n      },\r\n      (error) => {\r\n        this.errorMsg()\r\n      }\r\n    );\r\n  }\r\n\r\n  updateUserInfoForm() {\r\n    this.userInfoForm.patchValue({\r\n      firstName: this.userData.firstName,\r\n      middleName: this.userData.middleName,\r\n      lastName: this.userData.lastName,\r\n      email: this.userData.email,\r\n      birth: this.userData.dateOfBirth,\r\n      userPhoto: this.userData.userPhotoSrc\r\n    });\r\n  }\r\n\r\n  initializeUserData(): UserPageData {\r\n    return {\r\n      firstName: '',\r\n      middleName: '',\r\n      lastName: '',\r\n      email: '',\r\n      dateOfBirth: new Date(1990, 0, 1),\r\n      userPhotoSrc: '',\r\n      userType: 'Покупатель'\r\n    };\r\n  }\r\n  \r\n  initializeUserInfoForm(data: UserPageData): FormGroup {\r\n    return new FormGroup({\r\n      firstName: new FormControl(data.firstName),\r\n      middleName: new FormControl(data.middleName),\r\n      lastName: new FormControl(data.lastName),\r\n      email: new FormControl(data.email),\r\n      birth: new FormControl(data.dateOfBirth),\r\n      userPhoto: new FormControl(data.userPhotoSrc)\r\n    });\r\n  }\r\n\r\n  errorMsg(){\r\n    this.statusMsg = 'Что-то пошло не так!';\r\n\r\n    setTimeout(() => {\r\n      this.statusMsg = ''\r\n    }, 2000)\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAchD,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAE5BC,YAAoBC,WAAwB,EACxBC,cAA8B,EAC9BC,aAA4B,EAC5BC,MAAc,EACdC,aAA4B,EAC5BC,eAAgC;IALhC,KAAAL,WAAW,GAAXA,WAAW;IACX,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,eAAe,GAAfA,eAAe;IAEnC,KAAAC,gBAAgB,GAAW,IAAI,CAACF,aAAa,CAACG,KAAK,CAACD,gBAAgB;IAEpE,KAAAE,QAAQ,GAAiB,IAAI,CAACC,kBAAkB,EAAE;IAClD,KAAAC,YAAY,GAAG,IAAI,CAACC,sBAAsB,CAAC,IAAI,CAACH,QAAQ,CAAC;IACzD,KAAAI,cAAc,GAAc,EAAE;IAC9B,KAAAC,MAAM,GAAc,EAAE;IACtB,KAAAC,YAAY,GAAkB,EAAE;IAChC,KAAAC,SAAS,GAAG,EAAE;EAT0C;EAWxDC,QAAQA,CAAA;IACN,IAAI,CAAC,IAAI,CAAChB,WAAW,CAACiB,YAAY,EAChC,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAE7B,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,iBAAiB,EAAE;IACxB,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,SAAS,EAAE;EAClB;EAEA,IAAIC,yBAAyBA,CAAA;IAC3B,OAAO,IAAI,CAACrB,aAAa,CAACsB,YAAY;EACxC;EAEAC,iBAAiBA,CAACC,KAAa;IAC7B,OAAO,GAAG,IAAI,CAACtB,aAAa,CAACqB,iBAAiB,CAACC,KAAK,CAAC,EAAE;EACzD;EAEAC,WAAWA,CAACC,EAAU;IACpB,IAAI,CAACzB,MAAM,CAACe,QAAQ,CAAC,CAAC,iBAAiB,EAAEU,EAAE,CAAC,CAAC;EAC/C;EAEAR,iBAAiBA,CAACS,cAAA,GAA0B,IAAI;IAC9C,IAAI,CAAC5B,cAAc,CAACmB,iBAAiB,CAAC,IAAI,CAACpB,WAAW,CAAC8B,MAAM,CAAC,CAACC,SAAS,CACrEC,IAAe,IAAI;MAClBH,cAAc,GAAG,IAAI,CAACjB,cAAc,GAAGoB,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAI,IAAI,CAACrB,cAAc,GAAGoB,IAAI;IACvF,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EAEAG,cAAcA,CAAA;IACZ,IAAI,CAACrC,WAAW,CAACqC,cAAc,CAAC,IAAI,CAAC7B,QAAQ,CAAC,CAACuB,SAAS,CACrDC,IAAkB,IAAI;MACrB,IAAI,CAACjB,SAAS,GAAG,kBAAkB;IACrC,CAAC,EACAmB,KAAK,IAAI;MACR,IAAI,CAACnB,SAAS,GAAG,sBAAsB;IACzC,CAAC,CACF;IAEDuB,UAAU,CAAC,MAAK;MACd,IAAI,CAACvB,SAAS,GAAG,EAAE;IACrB,CAAC,EAAE,IAAI,CAAC;EACV;EAEAwB,gBAAgBA,CAAA;IACd,IAAI,CAACrC,aAAa,CAACsC,qBAAqB,EAAE;EAC5C;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACzC,WAAW,CAACyC,eAAe,EAAE;IAClCC,YAAY,CAACC,KAAK,EAAE;IACpB,IAAI,CAACxC,MAAM,CAACe,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACnB,WAAW,CAACmB,WAAW,EAAE,CAACY,SAAS,CACrCC,IAAkB,IAAI;MACrB,IAAI,CAACxB,QAAQ,GAAGwB,IAAI;MACpB,IAAI,CAACY,kBAAkB,EAAE;MACzB,IAAI,IAAI,CAACpC,QAAQ,CAACqC,YAAY,IAAI,IAAI,EACpC,IAAI,CAACrC,QAAQ,CAACqC,YAAY,GAAG,IAAI,CAACvC,gBAAgB;IACtD,CAAC,EACA4B,KAAK,IAAI;MACR,IAAI,CAACY,QAAQ,EAAE;IACjB,CAAC,CACF;EACH;EAEAxB,SAASA,CAAA;IACP,IAAI,CAACjB,eAAe,CAAC0C,SAAS,CAAC,IAAI,CAAC/C,WAAW,CAAC8B,MAAM,CAAC,CAACC,SAAS,CAC9DC,IAAe,IAAI;MAClB,IAAI,CAACnB,MAAM,GAAGmB,IAAI;MAClB,IAAI,CAACY,kBAAkB,EAAE;IAC3B,CAAC,EACAV,KAAK,IAAI;MACR,IAAI,CAACY,QAAQ,EAAE;IACjB,CAAC,CACF;EACH;EAEAzB,eAAeA,CAAA;IACb,IAAI,CAACrB,WAAW,CAACgD,cAAc,EAAE,CAACjB,SAAS,CACxCC,IAAmB,IAAI;MACtB,IAAI,CAAClB,YAAY,GAAGkB,IAAI;IAC1B,CAAC,EACAE,KAAK,IAAI;MACR,IAAI,CAACY,QAAQ,EAAE;IACjB,CAAC,CACF;EACH;EAEAG,cAAcA,CAACC,KAAW;IACxB,MAAMC,IAAI,GAAQD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAEvC,IAAIF,IAAI,EAAE;MACN,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAM,IAAI;QACvB,IAAI,CAACjD,QAAQ,CAACqC,YAAY,GAAGY,CAAC,CAACL,MAAM,CAACM,MAAM;MAChD,CAAC;MACDJ,MAAM,CAACK,aAAa,CAACR,IAAI,CAAC;;EAEhC;EAEAS,gBAAgBA,CAAA;IACd,IAAI,CAACxC,iBAAiB,CAAC,KAAK,CAAC;EAC/B;EAEAyC,mBAAmBA,CAACC,SAAiB;IACnC,IAAI,CAAC7D,cAAc,CAAC4D,mBAAmB,CAACC,SAAS,CAAC,CAAC/B,SAAS,CACzDC,IAAS,IAAI;MACZ,IAAI,CAACZ,iBAAiB,EAAE;IAC1B,CAAC,EACAc,KAAK,IAAI;MACR,IAAI,CAACY,QAAQ,EAAE;IACjB,CAAC,CACF;EACH;EAEAF,kBAAkBA,CAAA;IAChB,IAAI,CAAClC,YAAY,CAACqD,UAAU,CAAC;MAC3BC,SAAS,EAAE,IAAI,CAACxD,QAAQ,CAACwD,SAAS;MAClCC,UAAU,EAAE,IAAI,CAACzD,QAAQ,CAACyD,UAAU;MACpCC,QAAQ,EAAE,IAAI,CAAC1D,QAAQ,CAAC0D,QAAQ;MAChCC,KAAK,EAAE,IAAI,CAAC3D,QAAQ,CAAC2D,KAAK;MAC1BC,KAAK,EAAE,IAAI,CAAC5D,QAAQ,CAAC6D,WAAW;MAChCC,SAAS,EAAE,IAAI,CAAC9D,QAAQ,CAACqC;KAC1B,CAAC;EACJ;EAEApC,kBAAkBA,CAAA;IAChB,OAAO;MACLuD,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTE,WAAW,EAAE,IAAIE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;MACjC1B,YAAY,EAAE,EAAE;MAChB2B,QAAQ,EAAE;KACX;EACH;EAEA7D,sBAAsBA,CAACqB,IAAkB;IACvC,OAAO,IAAInC,SAAS,CAAC;MACnBmE,SAAS,EAAE,IAAIpE,WAAW,CAACoC,IAAI,CAACgC,SAAS,CAAC;MAC1CC,UAAU,EAAE,IAAIrE,WAAW,CAACoC,IAAI,CAACiC,UAAU,CAAC;MAC5CC,QAAQ,EAAE,IAAItE,WAAW,CAACoC,IAAI,CAACkC,QAAQ,CAAC;MACxCC,KAAK,EAAE,IAAIvE,WAAW,CAACoC,IAAI,CAACmC,KAAK,CAAC;MAClCC,KAAK,EAAE,IAAIxE,WAAW,CAACoC,IAAI,CAACqC,WAAW,CAAC;MACxCC,SAAS,EAAE,IAAI1E,WAAW,CAACoC,IAAI,CAACa,YAAY;KAC7C,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAAC/B,SAAS,GAAG,sBAAsB;IAEvCuB,UAAU,CAAC,MAAK;MACd,IAAI,CAACvB,SAAS,GAAG,EAAE;IACrB,CAAC,EAAE,IAAI,CAAC;EACV;CACD;AArLYjB,iBAAiB,GAAA2E,UAAA,EAL7B9E,SAAS,CAAC;EACT+E,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACW9E,iBAAiB,CAqL7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}