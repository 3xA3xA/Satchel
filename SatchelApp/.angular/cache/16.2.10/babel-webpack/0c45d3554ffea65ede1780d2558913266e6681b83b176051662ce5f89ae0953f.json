{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}`;\n    this.isAuthorized = false; // если true - пользователь зашел в аккаунт\n    this.userId = 0;\n    this.userTypeName = 'Покупатель';\n  }\n  setAuthorizedStatus() {\n    this.isAuthorized = !this.isAuthorized;\n  }\n  get authorizedStatus() {\n    return this.isAuthorized;\n  }\n  exitFromAccount() {\n    this.setAuthorizedStatus();\n    this.userId = 0;\n  }\n  updateUserInfo(userData) {\n    return this.http.put(`${this.apiUrl}/User/UpdateProfileInfoUser/${this.userId}`, userData);\n  }\n  getUserData() {\n    return this.http.get(`${this.apiUrl}/User/GetViewUserData/${this.userId}`);\n  }\n  getPaymentTypes() {\n    return this.http.get(`${this.apiUrl}/PaymentType/GetPaymentTypes/`);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","UserService","constructor","http","apiUrl","isAuthorized","userId","userTypeName","setAuthorizedStatus","authorizedStatus","exitFromAccount","updateUserInfo","userData","put","getUserData","get","getPaymentTypes","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Satchel\\SatchelApp\\src\\app\\core\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Product } from 'src/app/shared/components/routers/catalog/catalog.component';\r\nimport { PaymentType } from './config.service';\r\n\r\n// не могу вынести\r\nexport interface UserPageData{\r\n  [key: string]: any;\r\n  firstName: string;\r\n  middleName: string;\r\n  lastName: string;\r\n  email: string;\r\n  dateOfBirth: Date;\r\n  userPhotoSrc: string;\r\n  userType: string;\r\n  // можно будет дописать - отзывы\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private apiUrl: string = `${environment.apiUrl}`;\r\n  isAuthorized = false; // если true - пользователь зашел в аккаунт\r\n  userId = 0;\r\n  userTypeName = 'Покупатель';\r\n\r\n  setAuthorizedStatus(){\r\n    this.isAuthorized = !this.isAuthorized;\r\n  }\r\n\r\n  get authorizedStatus(){\r\n    return this.isAuthorized\r\n  }\r\n\r\n  exitFromAccount(){\r\n    this.setAuthorizedStatus();\r\n    this.userId = 0;\r\n  }\r\n\r\n  updateUserInfo(userData: UserPageData): Observable<UserPageData>  {\r\n    return this.http.put<UserPageData>(`${this.apiUrl}/User/UpdateProfileInfoUser/${this.userId}`, userData);\r\n  }\r\n\r\n  getUserData(): Observable<UserPageData> {\r\n    return this.http.get<UserPageData>(`${this.apiUrl}/User/GetViewUserData/${this.userId}`);\r\n  } \r\n\r\n  getPaymentTypes() : Observable<PaymentType[]> {\r\n    return this.http.get<PaymentType[]>(`${this.apiUrl}/PaymentType/GetPaymentTypes/`)\r\n  }\r\n\r\n  getShippingTypes()\r\n}\r\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAsB1D,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEhB,KAAAC,MAAM,GAAW,GAAGJ,WAAW,CAACI,MAAM,EAAE;IAChD,KAAAC,YAAY,GAAG,KAAK,CAAC,CAAC;IACtB,KAAAC,MAAM,GAAG,CAAC;IACV,KAAAC,YAAY,GAAG,YAAY;EALa;EAOxCC,mBAAmBA,CAAA;IACjB,IAAI,CAACH,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEA,IAAII,gBAAgBA,CAAA;IAClB,OAAO,IAAI,CAACJ,YAAY;EAC1B;EAEAK,eAAeA,CAAA;IACb,IAAI,CAACF,mBAAmB,EAAE;IAC1B,IAAI,CAACF,MAAM,GAAG,CAAC;EACjB;EAEAK,cAAcA,CAACC,QAAsB;IACnC,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAe,GAAG,IAAI,CAACT,MAAM,+BAA+B,IAAI,CAACE,MAAM,EAAE,EAAEM,QAAQ,CAAC;EAC1G;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAe,GAAG,IAAI,CAACX,MAAM,yBAAyB,IAAI,CAACE,MAAM,EAAE,CAAC;EAC1F;EAEAU,eAAeA,CAAA;IACb,OAAO,IAAI,CAACb,IAAI,CAACY,GAAG,CAAgB,GAAG,IAAI,CAACX,MAAM,+BAA+B,CAAC;EACpF;EAAC,QAAAa,CAAA,G;qBA/BUhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAHV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}