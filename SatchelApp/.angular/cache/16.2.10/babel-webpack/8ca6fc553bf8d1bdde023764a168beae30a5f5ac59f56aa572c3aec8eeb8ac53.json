{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7082/api/Product'; //URL API\n    this.imageAlt = '';\n    this.productRecords = [];\n  }\n  // getImageAlt(product : Product): string {\n  //   return product.name;\n  // }\n  getProcudtById(id) {\n    return this.cards.find(card => card.id === id);\n  }\n  // getAllCards(): Product[] {\n  //   return this.cards;\n  // } \n  getAllClothes() {\n    return this.http.get(`${this.apiUrl}`).pipe(map(response => response));\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","ProductService","constructor","http","apiUrl","imageAlt","productRecords","getProcudtById","id","cards","find","card","getAllClothes","get","pipe","response","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\SatchelProject\\SatchelApp\\src\\app\\core\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport Product from 'src/app/shared/components/routers/catalog/catalog.component';\r\nimport { Observable, map } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private apiUrl = 'https://localhost:7082/api/Product'; //URL API\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  imageAlt = '';\r\n\r\n  productRecords : Product[] = []; \r\n\r\n  // getImageAlt(product : Product): string {\r\n  //   return product.name;\r\n  // }\r\n\r\n  getProcudtById(id: number): Product | undefined {\r\n    return this.cards.find(card => card.id === id);\r\n  }\r\n\r\n  // getAllCards(): Product[] {\r\n  //   return this.cards;\r\n  // } \r\n\r\n  getAllClothes(): Observable<Product[]> {\r\n    return this.http.get(`${this.apiUrl}`).pipe(\r\n      map((response: Object) => <Product[]>response)\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAAqBA,GAAG,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC,CAAC,CAAC;IAIvD,KAAAC,QAAQ,GAAG,EAAE;IAEb,KAAAC,cAAc,GAAe,EAAE;EAJS;EAMxC;EACA;EACA;EAEAC,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;EAChD;EAEA;EACA;EACA;EAEAI,aAAaA,CAAA;IACX,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,MAAM,EAAE,CAAC,CAACU,IAAI,CACzCd,GAAG,CAAEe,QAAgB,IAAgBA,QAAQ,CAAC,CAC/C;EACH;EAAC,QAAAC,CAAA,G;qBAzBUf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}