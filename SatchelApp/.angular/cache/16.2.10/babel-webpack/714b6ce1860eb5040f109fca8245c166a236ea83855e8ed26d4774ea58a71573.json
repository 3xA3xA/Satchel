{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CartPageComponent = class CartPageComponent {\n  constructor(cartPageService, userService, router, configService) {\n    this.cartPageService = cartPageService;\n    this.userService = userService;\n    this.router = router;\n    this.configService = configService;\n    this.shoppingCart = [];\n    this.finalPrice = 0;\n    this.paymentTypes = [];\n  }\n  ngOnInit() {\n    this.checkAuthorization();\n    //ngOnInit будет прерван, если chechAuth не пройдет (интересный факт)\n    this.getShoppingCart();\n  }\n  checkAuthorization() {\n    if (!this.userService.isAuthorized) this.router.navigate(['/']);\n  }\n  getShoppingCart() {\n    this.cartPageService.GetShoppingCart(this.userService.userId).subscribe(productsFromQuery => {\n      this.shoppingCart = productsFromQuery;\n      this.sumPriceCart();\n      console.log(this.shoppingCart);\n    }, error => {\n      this.handleError('Error fetching products', error);\n    });\n  }\n  sumPriceCart() {\n    this.finalPrice = 0; //обнуление перед началом подсчёта\n    for (let product of this.shoppingCart) {\n      this.finalPrice += product.price;\n    }\n    return this.finalPrice;\n  }\n  deleteProductFromProductCart(productId, sizeTypeId) {\n    this.cartPageService.DeleteProductFromShoppingCart(productId, this.userService.userId, sizeTypeId).subscribe(() => {\n      this.getShoppingCart(); //получение нового списка товаров\n    }, error => {\n      this.handleError('Error deleting product', error);\n    });\n  }\n  addToOrder() {\n    this.cartPageService.AddToOrder(this.userService.userId, this.paymentTypeId, 1).subscribe(() => {\n      this.deleteAllProductsFromShoppingCart();\n      this.getShoppingCart(); //получение нового списка товаров\n    }, error => {\n      this.handleError('Error deleting product', error);\n    });\n  }\n  deleteAllProductsFromShoppingCart() {\n    this.cartPageService.DeleteAllProductsFromShoppingCart(this.userService.userId).subscribe(() => {}, error => {\n      this.handleError('Error deleting product', error);\n    });\n  }\n  getFormatPrice(price) {\n    return this.configService.getFormattedPrice(price);\n  }\n  handleError(message, error) {\n    console.error(message, error); // тут можно расписать полную логику при ошибке\n  }\n};\n\nCartPageComponent = __decorate([Component({\n  selector: 'app-cart-page',\n  templateUrl: './cart-page.component.html',\n  styleUrls: ['./cart-page.component.css']\n})], CartPageComponent);","map":{"version":3,"names":["Component","CartPageComponent","constructor","cartPageService","userService","router","configService","shoppingCart","finalPrice","paymentTypes","ngOnInit","checkAuthorization","getShoppingCart","isAuthorized","navigate","GetShoppingCart","userId","subscribe","productsFromQuery","sumPriceCart","console","log","error","handleError","product","price","deleteProductFromProductCart","productId","sizeTypeId","DeleteProductFromShoppingCart","addToOrder","AddToOrder","paymentTypeId","deleteAllProductsFromShoppingCart","DeleteAllProductsFromShoppingCart","getFormatPrice","getFormattedPrice","message","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Satchel\\SatchelApp\\src\\app\\shared\\components\\routers\\cart-page\\cart-page.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CartPageService } from 'src/app/core/services/cart-page.service';\r\nimport { UserService } from 'src/app/core/services/user.service';\r\nimport { Product } from '../catalog/catalog.component';\r\nimport { Router} from '@angular/router';\r\nimport { ConfigService } from 'src/app/core/services/config.service';\r\n\r\n@Component({\r\n  selector: 'app-cart-page',\r\n  templateUrl: './cart-page.component.html',\r\n  styleUrls: ['./cart-page.component.css']\r\n})\r\nexport class CartPageComponent {\r\n\r\n  constructor(private cartPageService: CartPageService, \r\n              private userService: UserService, \r\n              private router: Router,\r\n              private configService: ConfigService) { }\r\n\r\n  shoppingCart : Product[] = [];\r\n  finalPrice: number = 0\r\n  paymentTypes: PaymentType[] = [];\r\n\r\n  ngOnInit() {\r\n    this.checkAuthorization();\r\n    //ngOnInit будет прерван, если chechAuth не пройдет (интересный факт)\r\n    this.getShoppingCart(); \r\n  }\r\n\r\n  checkAuthorization() {\r\n    if (!this.userService.isAuthorized)\r\n      this.router.navigate(['/']);\r\n  }\r\n\r\n  getShoppingCart() {\r\n    this.cartPageService.GetShoppingCart(this.userService.userId).subscribe(\r\n      (productsFromQuery: Product[]) => {\r\n        this.shoppingCart = productsFromQuery;\r\n        this.sumPriceCart();\r\n        console.log(this.shoppingCart)\r\n      },\r\n      (error) => {\r\n        this.handleError('Error fetching products', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  sumPriceCart(){\r\n    this.finalPrice = 0; //обнуление перед началом подсчёта\r\n    for(let product of this.shoppingCart){\r\n      this.finalPrice += product.price\r\n    }\r\n    return this.finalPrice\r\n  }\r\n\r\n  deleteProductFromProductCart(productId : number, sizeTypeId : number) {\r\n    this.cartPageService.DeleteProductFromShoppingCart(productId, this.userService.userId, sizeTypeId).subscribe(\r\n      () => {\r\n        this.getShoppingCart(); //получение нового списка товаров\r\n      },\r\n      (error) => {\r\n        this.handleError('Error deleting product', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  addToOrder() {\r\n    this.cartPageService.AddToOrder(this.userService.userId, this.paymentTypeId, 1).subscribe(\r\n      () => {\r\n        this.deleteAllProductsFromShoppingCart();\r\n        this.getShoppingCart(); //получение нового списка товаров\r\n      },\r\n      (error) => {\r\n        this.handleError('Error deleting product', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteAllProductsFromShoppingCart(){\r\n    this.cartPageService.DeleteAllProductsFromShoppingCart(this.userService.userId).subscribe(\r\n      () => {\r\n      },\r\n      (error) => {\r\n        this.handleError('Error deleting product', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getFormatPrice(price: number){\r\n    return (this.configService.getFormattedPrice(price));\r\n  }\r\n\r\n  handleError(message: string, error: any) {\r\n    console.error(message, error); // тут можно расписать полную логику при ошибке\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}