{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthorizationService {\n  constructor() {\n    this.isRegistrationOpen = false;\n  }\n  openAuthWindow() {\n    this.isRegistrationOpen = true;\n  }\n  closeAuthWindow() {\n    this.isRegistrationOpen = false;\n  }\n  static #_ = this.ɵfac = function AuthorizationService_Factory(t) {\n    return new (t || AuthorizationService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthorizationService,\n    factory: AuthorizationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthorizationService","constructor","isRegistrationOpen","openAuthWindow","closeAuthWindow","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Повелитель\\Documents\\GitHub\\Satchel\\SatchelApp\\src\\app\\core\\services\\authorization.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizationService {\r\n\r\n  isRegistrationOpen : boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  openAuthWindow() : void {\r\n    this.isRegistrationOpen = true;\r\n  }\r\n\r\n  closeAuthWindow() : void{\r\n    this.isRegistrationOpen = false;\r\n  }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,oBAAoB;EAI/BC,YAAA;IAFA,KAAAC,kBAAkB,GAAa,KAAK;EAEpB;EAEhBC,cAAcA,CAAA;IACZ,IAAI,CAACD,kBAAkB,GAAG,IAAI;EAChC;EAEAE,eAAeA,CAAA;IACb,IAAI,CAACF,kBAAkB,GAAG,KAAK;EACjC;EAAC,QAAAG,CAAA,G;qBAZUL,oBAAoB;EAAA;EAAA,QAAAM,EAAA,G;WAApBN,oBAAoB;IAAAO,OAAA,EAApBP,oBAAoB,CAAAQ,IAAA;IAAAC,UAAA,EAFnB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}