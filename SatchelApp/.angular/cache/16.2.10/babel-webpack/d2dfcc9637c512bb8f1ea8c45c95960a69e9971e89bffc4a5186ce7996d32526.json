{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ElementRef, ViewChild } from '@angular/core';\nexport let CreateWindowComponent = class CreateWindowComponent {\n  constructor(createService) {\n    this.createService = createService;\n    this.imageUrls = ['https://www.fivebranches.edu/wp-content/uploads/2021/08/default-image.jpg'];\n    // массивы нужны для хранения списка брендов и типов продукта.\n    this.productTypes = {};\n    this.brandTypes = [];\n    this.fileInput = new ElementRef(null);\n  }\n  ngOnInit() {\n    this.createService.getBrandTypes().subscribe(data => {\n      this.brandTypes = data;\n      console.log(data);\n    }, error => {\n      console.error('Error fetching products', error);\n    });\n  }\n  onFileSelected(event) {\n    if (event.target.files && event.target.files.length) {\n      this.imageUrls = []; //обнулил предыдущие загруженные фотографии\n      for (let i = 0; i < event.target.files.length; i++) {\n        const file = event.target.files[i];\n        let reader = new FileReader();\n        reader.onload = event => {\n          this.imageUrls.push(event.target.result);\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n    console.log(this.imageUrls);\n  }\n  onBgClick(event) {\n    if (!event.target.classList.contains('create-form')) {\n      this.closeCreateWindow();\n    }\n  }\n  addNewProduct() {}\n  closeCreateWindow() {\n    this.createService.setCreateWindowStatus();\n  }\n};\n__decorate([ViewChild('fileInput')], CreateWindowComponent.prototype, \"fileInput\", void 0);\nCreateWindowComponent = __decorate([Component({\n  selector: 'app-create-window',\n  templateUrl: './create-window.component.html',\n  styleUrls: ['./create-window.component.css']\n})], CreateWindowComponent);","map":{"version":3,"names":["Component","ElementRef","ViewChild","CreateWindowComponent","constructor","createService","imageUrls","productTypes","brandTypes","fileInput","ngOnInit","getBrandTypes","subscribe","data","console","log","error","onFileSelected","event","target","files","length","i","file","reader","FileReader","onload","push","result","readAsDataURL","onBgClick","classList","contains","closeCreateWindow","addNewProduct","setCreateWindowStatus","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Satchel\\SatchelApp\\src\\app\\shared\\components\\create-window\\create-window.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CreateService } from 'src/app/core/services/create.service';\r\nimport { ElementRef, ViewChild } from '@angular/core';\r\nimport { Product } from '../routers/catalog/catalog.component';\r\n\r\n@Component({\r\n  selector: 'app-create-window',\r\n  templateUrl: './create-window.component.html',\r\n  styleUrls: ['./create-window.component.css']\r\n})\r\nexport class CreateWindowComponent {\r\n  imageUrls = ['https://www.fivebranches.edu/wp-content/uploads/2021/08/default-image.jpg'];\r\n  // массивы нужны для хранения списка брендов и типов продукта.\r\n  productTypes = {};\r\n  brandTypes = [];\r\n\r\n  constructor(private createService: CreateService) { }\r\n\r\n  @ViewChild('fileInput') fileInput = new ElementRef(null) ;\r\n\r\n  ngOnInit() {\r\n    this.createService.getBrandTypes().subscribe(\r\n      (data: any) => {\r\n        this.brandTypes = data;\r\n        console.log(data)\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching products', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    if (event.target.files && event.target.files.length) {\r\n      this.imageUrls = [] //обнулил предыдущие загруженные фотографии\r\n      for (let i = 0; i < event.target.files.length; i++) {\r\n        const file = event.target.files[i];\r\n        let reader = new FileReader();\r\n    \r\n        reader.onload = (event: any) => {\r\n          this.imageUrls.push(event.target.result);\r\n        }\r\n    \r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n    console.log(this.imageUrls)\r\n  }\r\n\r\n  public onBgClick(event: any) {\r\n  \r\n    if (!event.target.classList.contains('create-form')) { \r\n      this.closeCreateWindow();\r\n    } \r\n  }\r\n\r\n  addNewProduct(){\r\n\r\n  }\r\n\r\n  closeCreateWindow(): void {\r\n    this.createService.setCreateWindowStatus();\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,UAAU,EAAEC,SAAS,QAAQ,eAAe;AAQ9C,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAMhCC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IALjC,KAAAC,SAAS,GAAG,CAAC,2EAA2E,CAAC;IACzF;IACA,KAAAC,YAAY,GAAG,EAAE;IACjB,KAAAC,UAAU,GAAG,EAAE;IAIS,KAAAC,SAAS,GAAG,IAAIR,UAAU,CAAC,IAAI,CAAC;EAFJ;EAIpDS,QAAQA,CAAA;IACN,IAAI,CAACL,aAAa,CAACM,aAAa,EAAE,CAACC,SAAS,CACzCC,IAAS,IAAI;MACZ,IAAI,CAACL,UAAU,GAAGK,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;EAEAC,cAAcA,CAACC,KAAU;IACvB,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,EAAE;MACnD,IAAI,CAACf,SAAS,GAAG,EAAE,EAAC;MACpB,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,EAAEC,CAAC,EAAE,EAAE;QAClD,MAAMC,IAAI,GAAGL,KAAK,CAACC,MAAM,CAACC,KAAK,CAACE,CAAC,CAAC;QAClC,IAAIE,MAAM,GAAG,IAAIC,UAAU,EAAE;QAE7BD,MAAM,CAACE,MAAM,GAAIR,KAAU,IAAI;UAC7B,IAAI,CAACZ,SAAS,CAACqB,IAAI,CAACT,KAAK,CAACC,MAAM,CAACS,MAAM,CAAC;QAC1C,CAAC;QAEDJ,MAAM,CAACK,aAAa,CAACN,IAAI,CAAC;;;IAG9BT,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,SAAS,CAAC;EAC7B;EAEOwB,SAASA,CAACZ,KAAU;IAEzB,IAAI,CAACA,KAAK,CAACC,MAAM,CAACY,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAE;MACnD,IAAI,CAACC,iBAAiB,EAAE;;EAE5B;EAEAC,aAAaA,CAAA,GAEb;EAEAD,iBAAiBA,CAAA;IACf,IAAI,CAAC5B,aAAa,CAAC8B,qBAAqB,EAAE;EAC5C;CACD;AA7CyBC,UAAA,EAAvBlC,SAAS,CAAC,WAAW,CAAC,C,uDAAmC;AAR/CC,qBAAqB,GAAAiC,UAAA,EALjCpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWpC,qBAAqB,CAqDjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}