{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CreateService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}`;\n    this.isCreateOpen = false;\n  }\n  setCreateWindowStatus() {\n    this.isCreateOpen = !this.isCreateOpen;\n  }\n  getBrandTypes() {\n    return this.http.get(this.apiUrl + `/BrandType/GetBrandTypes`);\n  }\n  getProductTypes() {\n    return this.http.get(this.apiUrl + `/ProductType/GetProductTypes`);\n  }\n  getSizesByProductType(clothesType) {\n    return this.http.get(this.apiUrl + `/SizeType/GetSizeTypesByProductType?productTypeName=${clothesType}`);\n  }\n  getGenderTypes() {\n    return this.http.get(this.apiUrl + `/GenderType/GetGenderTypes`);\n  }\n  static #_ = this.ɵfac = function CreateService_Factory(t) {\n    return new (t || CreateService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CreateService,\n    factory: CreateService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","CreateService","constructor","http","apiUrl","isCreateOpen","setCreateWindowStatus","getBrandTypes","get","getProductTypes","getSizesByProductType","clothesType","getGenderTypes","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Satchel\\SatchelApp\\src\\app\\core\\services\\create.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CreateService {\r\n\r\n  private apiUrl: string = `${environment.apiUrl}`; \r\n\r\n  isCreateOpen : boolean = false;\r\n  \r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  setCreateWindowStatus() : void{\r\n    this.isCreateOpen = !this.isCreateOpen;\r\n  }\r\n\r\n  getBrandTypes() {\r\n    return this.http.get(this.apiUrl + `/BrandType/GetBrandTypes`)\r\n  }\r\n\r\n  getProductTypes() {\r\n    return this.http.get(this.apiUrl + `/ProductType/GetProductTypes`)\r\n  }\r\n\r\n  getSizesByProductType(clothesType: string) { \r\n    return this.http.get(this.apiUrl + `/SizeType/GetSizeTypesByProductType?productTypeName=${clothesType}`)\r\n  }\r\n\r\n  getGenderTypes() : Observable<GenderType[]>{\r\n    return this.http.get<GenderType[]>(this.apiUrl + `/GenderType/GetGenderTypes`)\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;;;AAO1D,OAAM,MAAOC,aAAa;EAOxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALhB,KAAAC,MAAM,GAAW,GAAGJ,WAAW,CAACI,MAAM,EAAE;IAEhD,KAAAC,YAAY,GAAa,KAAK;EAGU;EAExCC,qBAAqBA,CAAA;IACnB,IAAI,CAACD,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,IAAI,CAACJ,MAAM,GAAG,0BAA0B,CAAC;EAChE;EAEAK,eAAeA,CAAA;IACb,OAAO,IAAI,CAACN,IAAI,CAACK,GAAG,CAAC,IAAI,CAACJ,MAAM,GAAG,8BAA8B,CAAC;EACpE;EAEAM,qBAAqBA,CAACC,WAAmB;IACvC,OAAO,IAAI,CAACR,IAAI,CAACK,GAAG,CAAC,IAAI,CAACJ,MAAM,GAAG,uDAAuDO,WAAW,EAAE,CAAC;EAC1G;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACT,IAAI,CAACK,GAAG,CAAe,IAAI,CAACJ,MAAM,GAAG,4BAA4B,CAAC;EAChF;EAAC,QAAAS,CAAA,G;qBA3BUZ,aAAa,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbjB,aAAa;IAAAkB,OAAA,EAAblB,aAAa,CAAAmB,IAAA;IAAAC,UAAA,EAHZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}