{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CreateService {\n  constructor(http) {\n    this.http = http;\n    //сомнительный сервис, не похож на апишные. поэтому обращаться будет к разным методами с разными апи.\n    this.apiUrl = `${environment.apiUrl}`;\n    this.isCreateOpen = false;\n  }\n  //https://localhost:7082/api/ProductType/GetProductTypes\n  setCreateWindowStatus() {\n    this.isCreateOpen = !this.isCreateOpen;\n    console.log(this.isCreateOpen);\n  }\n  getBrandTypes() {\n    return this.http.post(this.apiUrl + `/BrandType/GetBrandTypes`, null);\n  }\n  getProductTypes() {\n    return this.http.get(this.apiUrl + `/ProductType/GetProductTypes`);\n  }\n  static #_ = this.ɵfac = function CreateService_Factory(t) {\n    return new (t || CreateService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CreateService,\n    factory: CreateService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","CreateService","constructor","http","apiUrl","isCreateOpen","setCreateWindowStatus","console","log","getBrandTypes","post","getProductTypes","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Satchel\\SatchelApp\\src\\app\\core\\services\\create.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nexport interface Brand{\r\n  brantTypeId: number;\r\n  name: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CreateService {\r\n\r\n  //сомнительный сервис, не похож на апишные. поэтому обращаться будет к разным методами с разными апи.\r\n  private apiUrl: string = `${environment.apiUrl}`; \r\n\r\n  isCreateOpen : boolean = false;\r\n  \r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //https://localhost:7082/api/ProductType/GetProductTypes\r\n\r\n  setCreateWindowStatus() : void{\r\n    this.isCreateOpen = !this.isCreateOpen;\r\n    console.log(this.isCreateOpen)\r\n  }\r\n\r\n  getBrandTypes() {\r\n    return this.http.post(this.apiUrl + `/BrandType/GetBrandTypes`, null)\r\n  }\r\n\r\n  getProductTypes() {\r\n    return this.http.get(this.apiUrl + `/ProductType/GetProductTypes`)\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;;;AAY1D,OAAM,MAAOC,aAAa;EAQxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANxB;IACQ,KAAAC,MAAM,GAAW,GAAGJ,WAAW,CAACI,MAAM,EAAE;IAEhD,KAAAC,YAAY,GAAa,KAAK;EAGU;EAExC;EAEAC,qBAAqBA,CAAA;IACnB,IAAI,CAACD,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;IACtCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,YAAY,CAAC;EAChC;EAEAI,aAAaA,CAAA;IACX,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACN,MAAM,GAAG,0BAA0B,EAAE,IAAI,CAAC;EACvE;EAEAO,eAAeA,CAAA;IACb,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,IAAI,CAACR,MAAM,GAAG,8BAA8B,CAAC;EACpE;EAAC,QAAAS,CAAA,G;qBAvBUZ,aAAa,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbjB,aAAa;IAAAkB,OAAA,EAAblB,aAAa,CAAAmB,IAAA;IAAAC,UAAA,EAHZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}